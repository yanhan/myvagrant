##############################
# Add git ppa for a more modern version of git
##############################
- name: import GPG key for git-core ppa
  apt_key: keyserver=keyserver.ubuntu.com id=E1DD270288B4E6030699E45FA1715D88E1DF1F24 state=present

- name: add git-core ppa for a more modern version of git
  apt_repository: repo='deb http://ppa.launchpad.net/git-core/ppa/ubuntu trusty main' state=present update_cache=yes

- name: add git-core ppa for a more modern version of git
  apt_repository: repo='deb-src http://ppa.launchpad.net/git-core/ppa/ubuntu trusty main' state=present update_cache=yes


##############################
# Use custom keypair for SSH
# You will need to comment out the following line in the `Vagrantfile`:
#
#     my_config.ssh.private_key = "~/.ssh/id_rsa"
#
# for the provisioning to work.
# After the provisioning, you can then uncomment that line
##############################
- name: check if append-id-rsa-pub-to-authorized-keys script exists in Vagrant
  shell: command -v {{vagrant__append_id_rsa_pub_script_path}} >/dev/null 2>&1
  register: vagrant__append_id_rsa_pub_exists
  ignore_errors: True

- name: >
    compute SHA256sum of append-id-rsa-pub-to-authorized-keys script
    (in Vagrant)
  shell: sha256sum {{vagrant__append_id_rsa_pub_script_path}}
  register: vagrant__append_id_rsa_pub_sha256sum
  when: vagrant__append_id_rsa_pub_exists.rc == 0

- name: >
    compute SHA256sum of append-id-rsa-pub-to-authorized-keys script
    (outside Vagrant, Linux)
  shell: sha256sum {{local__append_id_rsa_pub_script_path}}
  args:
    chdir: ~/myvagrant/ansible/roles/vagrant/files
  register: local_linux__append_id_rsa_pub_sha256sum
  connection: local
  sudo_user: yh
  delegate_to: 127.0.0.1
  ignore_errors: True
  when: vagrant__append_id_rsa_pub_exists.rc == 0

- name: compute SHA256sum of append-id-rsa-pub script (outside Vagrant, OS X)
  shell: shasum -a 256 {{local__append_id_rsa_pub_script_path}}
  args:
    chdir: ~/myvagrant/ansible/roles/vagrant/files
  register: local_osx__append_id_rsa_pub_sha256sum
  connection: local
  sudo_user: yh
  delegate_to: 127.0.0.1
  when: vagrant__append_id_rsa_pub_exists.rc == 0 and
        local_linux__append_id_rsa_pub_sha256sum.rc != 0

- name: ensure SHA256sum of append-id-rsa-pub script (outside Vagrant) is taken
  assert:
    that: >
      local_linux__append_id_rsa_pub_sha256sum.rc == 0 or
      local_osx__append_id_rsa_pub_sha256sum.rc == 0
  when: vagrant__append_id_rsa_pub_exists.rc == 0

- name: copy append-id-rsa-pub script to Vagrant (if needed)
  copy: src="{{local__append_id_rsa_pub_script_path}}"
        dest="{{vagrant__append_id_rsa_pub_script_path}}"
        owner=root
        group=root
        mode=755
  when: vagrant__append_id_rsa_pub_exists.rc != 0 or
        (local_linux__append_id_rsa_pub_sha256sum.rc is defined and
         local_linux__append_id_rsa_pub_sha256sum.rc == 0 and
         local_linux__append_id_rsa_pub_sha256sum.stdout.split()[0] !=
         vagrant__append_id_rsa_pub_sha256sum.stdout.split()[0]
        ) or
        (local_osx__append_id_rsa_pub_sha256sum.rc is defined and
         local_osx__append_id_rsa_pub_sha256sum.rc == 0 and
         local_osx__append_id_rsa_pub_sha256sum.stdout.split()[0] !=
         vagrant__append_id_rsa_pub_sha256sum.stdout.split()[0]
        )

- name: copy SSH public key to temporary folder
  copy: src=id_rsa.pub
        dest="{{my_id_rsa_pub_path}}"
        owner=vagrant
        group=vagrant
        mode=0400

- name: add SSH public key into authorized keys (if not already added)
  shell: "{{vagrant__append_id_rsa_pub_script_path}} {{my_id_rsa_pub_path}}"
  sudo_user: vagrant

- name: remove SSH public key from temporary folder
  shell: rm {{my_id_rsa_pub_path}}
### End of code enabling use of custom SSH keypair


# This is to allow for commands that require a password
- name: copy password file to Vagrant
  copy: src=vagrant_password.txt
        dest="{{vagrant_password_file_dest_path}}"
        owner=vagrant
        group=vagrant
        mode=0600

- name: apt-get update if last update was > 1 day ago
  apt: update_cache=yes cache_valid_time=86400

- name: install zsh
  apt: name=zsh state=present

- name: install make
  apt: name=make state=present

- name: install curl
  apt: name=curl state=present

- name: install unzip
  apt: name=unzip state=present

- name: install sqlite3
  apt: name=sqlite3 state=present

- name: install socat
  apt: name=socat state=present

- name: install g++
  apt: name=g++ state=present

- name: install gdb
  apt: name=gdb state=present

- name: install valgrind
  apt: name=valgrind state=present

- name: install vim
  apt: name=vim state=present

- name: install screen
  apt: name=screen state=present

- name: install tmux
  apt: name=tmux state=present

- name: install python-virtualenv
  apt: name=python-virtualenv state=present

- name: install python-dev
  apt: name=python-dev state=present

- name: install openjdk 7
  apt: name=openjdk-7-jdk state=present

- name: install mercurial
  apt: name=mercurial state=present

- name: check if Docker exists
  shell: command -v docker >/dev/null 2>&1
  register: docker_exists
  ignore_errors: true

- name: install Docker if it does not exist
  shell: (wget -qO- https://get.docker.io/ | bash) && usermod -aG docker vagrant
  when: docker_exists.rc != 0

- name: install libcurl
  apt: name=libcurl4-openssl-dev state=present

- name: install git
  apt: name=git state=present

- include: install_dotfiles.yml

- include: install_git_crypt.yml

- include: install_node_js.yml

- include: install_golang.yml

- include: install_rvm.yml

- name: install OCaml
  apt: name=ocaml state=present

- name: remove password file
  shell: rm -f "{{vagrant_password_file_dest_path}}"
